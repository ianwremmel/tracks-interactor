restore_cache: &restore_cache
  keys:
    - node-modules-{{ arch }}-{{ checksum "package-lock.json" }}

save_cache: &save_cache
  key: node-modules-{{ arch }}-{{ checksum "package-lock.json" }}
  paths:
    - node_modules
  when: always

docker: &docker
  - image: 'node:10'

filter_master_only: &filter_master_only
  branches:
    only: master

commands:
  pre_commands:
    steps:
      - checkout
      - attach_workspace:
          at: '.'

  post_commands:
    steps:
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

version: 2.1
jobs:
  install:
    docker: *docker
    environment:
      NPM_CONFIG_LOGLEVEL: warn
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: npm ci
      - save_cache: *save_cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  lint:
    docker: *docker
    steps:
      - pre_commands
      - run: npm run lint
      - post_commands

  test:
    docker: *docker
    environment:
      PORT: '4000'
    steps:
      - pre_commands
      - run: npm run test
      - post_commands

  release:
    docker: *docker
    environment:
      NODE_ENV: production
    steps:
      - pre_commands
      - deploy:
          name: Semantic Release
          command: |
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ./.npmrc
            npm run build
            npm run semantic-release

workflows:
  version: 2
  build:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - release:
          context: semantic-release
          filters: *filter_master_only
          requires:
            - test
            - lint
